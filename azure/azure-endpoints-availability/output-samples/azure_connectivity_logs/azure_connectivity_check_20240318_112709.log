=======================================================================
Azure Connectivity Checker Script
=======================================================================
Working directory: /home/azureuser
Current user: dtuserag
ActiveGate configuration directory: /var/lib/dynatrace/gateway/config
Detected proxy settings:

[http.client]
proxy-server = localhost
proxy-port = 3129
proxy-user = test
proxy-password-encr = zwuec2iU3wEEmfV+4Xt4lWHkxrT2Mayfq8j1OwEy54s

Detected proxy settings in /var/lib/dynatrace/gateway/config/custom.properties:
Server: localhost, Port: 3129
Proxy certificate: /etc/ssl/certs/squidCA.pem
Checking the availability of Azure endpoints
-----------------------------------------------------------------------
Checking connectivity to Azure endpoint [https://management.azure.com/:443] via [localhost:3129]...
cURL command:
curl -v -x https://localhost:3129 https://management.azure.com/:443 --proxy-cacert /etc/ssl/certs/squidCA.pem
Response:
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1:3129...
* TCP_NODELAY set
* Connected to localhost (127.0.0.1) port 3129 (#0)
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/squidCA.pem
  CApath: /etc/ssl/certs
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [122 bytes data]
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
{ [6 bytes data]
* TLSv1.3 (IN), TLS handshake, Certificate (11):
{ [944 bytes data]
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
{ [264 bytes data]
* TLSv1.3 (IN), TLS handshake, Finished (20):
{ [52 bytes data]
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.3 (OUT), TLS handshake, Finished (20):
} [52 bytes data]
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server did not agree to a protocol
* Proxy certificate:
*  subject: C=PL; ST=Gdn; L=Gdansk; O=DT; OU=PCLOUDS; CN=localhost
*  start date: Mar 18 08:27:00 2024 GMT
*  expire date: Mar 18 08:27:00 2025 GMT
*  common name: localhost (matched)
*  issuer: C=PL; ST=Gdn; L=Gdansk; O=DT; OU=PCLOUDS; CN=localhost
*  SSL certificate verify ok.
* allocate connect buffer!
* Establish HTTP proxy tunnel to management.azure.com:443
} [5 bytes data]
> CONNECT management.azure.com:443 HTTP/1.1
> Host: management.azure.com:443
> User-Agent: curl/7.68.0
> Proxy-Connection: Keep-Alive
> 
{ [5 bytes data]
< HTTP/1.1 200 Connection established
< 
* Proxy replied 200 to CONNECT request
* CONNECT phase completed!
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/ca-certificates.crt
  CApath: /etc/ssl/certs
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* CONNECT phase completed!
* CONNECT phase completed!
{ [5 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [88 bytes data]
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [187 bytes data]
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
{ [15 bytes data]
* TLSv1.3 (IN), TLS handshake, Certificate (11):
{ [3748 bytes data]
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
{ [264 bytes data]
* TLSv1.3 (IN), TLS handshake, Finished (20):
{ [52 bytes data]
* TLSv1.3 (OUT), TLS handshake, Finished (20):
} [52 bytes data]
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server accepted to use h2
* Server certificate:
*  subject: C=US; ST=WA; L=Redmond; O=Microsoft Corporation; CN=management.azure.com
*  start date: Mar  5 20:30:04 2024 GMT
*  expire date: Feb 28 20:30:04 2025 GMT
*  subjectAltName: host "management.azure.com" matched cert's "management.azure.com"
*  issuer: C=US; O=Microsoft Corporation; CN=Microsoft Azure RSA TLS Issuing CA 04
*  SSL certificate verify ok.
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
} [5 bytes data]
* Using Stream ID: 1 (easy handle 0x562150a8d0e0)
} [5 bytes data]
> GET /:443 HTTP/2
> Host: management.azure.com
> user-agent: curl/7.68.0
> accept: */*
> 
{ [5 bytes data]
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
{ [81 bytes data]
* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!
} [5 bytes data]
< HTTP/2 400 
< cache-control: no-cache
< pragma: no-cache
< content-type: application/json; charset=utf-8
< expires: -1
< x-ms-failure-cause: gateway
< x-ms-request-id: e4aedc84-1237-4ab0-b6c4-7257b940f390
< x-ms-correlation-request-id: e4aedc84-1237-4ab0-b6c4-7257b940f390
< x-ms-routing-request-id: WESTEUROPE:20240318T112709Z:e4aedc84-1237-4ab0-b6c4-7257b940f390
< strict-transport-security: max-age=31536000; includeSubDomains
< x-content-type-options: nosniff
< date: Mon, 18 Mar 2024 11:27:08 GMT
< content-length: 137
< 
{ [137 bytes data]
100   137  100   137    0     0   1712      0 --:--:-- --:--:-- --:--:--  1712
* Connection #0 to host localhost left intact
{"error":{"code":"MissingApiVersionParameter","message":"The api-version query parameter (?api-version=) is required for all requests."}}
Connection to https://management.azure.com/ is SUCCESSFUL.
-----------------------------------------------------------------------
Checking connectivity to Azure endpoint [https://login.microsoftonline.com/:443] via [localhost:3129]...
cURL command:
curl -v -x https://localhost:3129 https://login.microsoftonline.com/:443 --proxy-cacert /etc/ssl/certs/squidCA.pem
Response:
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1:3129...
* TCP_NODELAY set
* Connected to localhost (127.0.0.1) port 3129 (#0)
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/squidCA.pem
  CApath: /etc/ssl/certs
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [122 bytes data]
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
{ [6 bytes data]
* TLSv1.3 (IN), TLS handshake, Certificate (11):
{ [944 bytes data]
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
{ [264 bytes data]
* TLSv1.3 (IN), TLS handshake, Finished (20):
{ [52 bytes data]
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.3 (OUT), TLS handshake, Finished (20):
} [52 bytes data]
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server did not agree to a protocol
* Proxy certificate:
*  subject: C=PL; ST=Gdn; L=Gdansk; O=DT; OU=PCLOUDS; CN=localhost
*  start date: Mar 18 08:27:00 2024 GMT
*  expire date: Mar 18 08:27:00 2025 GMT
*  common name: localhost (matched)
*  issuer: C=PL; ST=Gdn; L=Gdansk; O=DT; OU=PCLOUDS; CN=localhost
*  SSL certificate verify ok.
* allocate connect buffer!
* Establish HTTP proxy tunnel to login.microsoftonline.com:443
} [5 bytes data]
> CONNECT login.microsoftonline.com:443 HTTP/1.1
> Host: login.microsoftonline.com:443
> User-Agent: curl/7.68.0
> Proxy-Connection: Keep-Alive
> 
{ [5 bytes data]
< HTTP/1.1 200 Connection established
< 
* Proxy replied 200 to CONNECT request
* CONNECT phase completed!
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/ca-certificates.crt
  CApath: /etc/ssl/certs
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* CONNECT phase completed!
* CONNECT phase completed!
{ [5 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [88 bytes data]
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [187 bytes data]
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
{ [19 bytes data]
* TLSv1.3 (IN), TLS handshake, Certificate (11):
{ [3288 bytes data]
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
{ [264 bytes data]
* TLSv1.3 (IN), TLS handshake, Finished (20):
{ [52 bytes data]
* TLSv1.3 (OUT), TLS handshake, Finished (20):
} [52 bytes data]
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server accepted to use h2
* Server certificate:
*  subject: C=US; ST=Washington; L=Redmond; O=Microsoft Corporation; CN=stamp2.login.microsoftonline.com
*  start date: Feb 21 00:00:00 2024 GMT
*  expire date: Feb 21 23:59:59 2025 GMT
*  subjectAltName: host "login.microsoftonline.com" matched cert's "login.microsoftonline.com"
*  issuer: C=US; O=DigiCert Inc; CN=DigiCert SHA2 Secure Server CA
*  SSL certificate verify ok.
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
} [5 bytes data]
* Using Stream ID: 1 (easy handle 0x555f3b1580e0)
} [5 bytes data]
> GET /:443 HTTP/2
> Host: login.microsoftonline.com
> user-agent: curl/7.68.0
> accept: */*
> 
{ [5 bytes data]
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
{ [81 bytes data]
* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!
} [5 bytes data]
< HTTP/2 404 
< cache-control: private
< set-cookie: x-ms-gateway-slice=estsfd; path=/; secure; samesite=none; httponly
< strict-transport-security: max-age=31536000; includeSubDomains
< x-content-type-options: nosniff
< p3p: CP="DSP CUR OTPi IND OTRi ONL FIN"
< x-ms-request-id: 24c76195-169e-4329-8193-41c4fc811b00
< x-ms-ests-server: 2.1.17573.4 - SEC ProdSlices
< x-xss-protection: 0
< date: Mon, 18 Mar 2024 11:27:08 GMT
< content-length: 0
< 
{ [0 bytes data]
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host localhost left intact
Connection to https://login.microsoftonline.com/ is SUCCESSFUL.
-----------------------------------------------------------------------
Checking connectivity to Azure endpoint [https://management.core.windows.net/:443] via [localhost:3129]...
cURL command:
curl -v -x https://localhost:3129 https://management.core.windows.net/:443 --proxy-cacert /etc/ssl/certs/squidCA.pem
Response:
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1:3129...
* TCP_NODELAY set
* Connected to localhost (127.0.0.1) port 3129 (#0)
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/squidCA.pem
  CApath: /etc/ssl/certs
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [122 bytes data]
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
{ [6 bytes data]
* TLSv1.3 (IN), TLS handshake, Certificate (11):
{ [944 bytes data]
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
{ [264 bytes data]
* TLSv1.3 (IN), TLS handshake, Finished (20):
{ [52 bytes data]
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.3 (OUT), TLS handshake, Finished (20):
} [52 bytes data]
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server did not agree to a protocol
* Proxy certificate:
*  subject: C=PL; ST=Gdn; L=Gdansk; O=DT; OU=PCLOUDS; CN=localhost
*  start date: Mar 18 08:27:00 2024 GMT
*  expire date: Mar 18 08:27:00 2025 GMT
*  common name: localhost (matched)
*  issuer: C=PL; ST=Gdn; L=Gdansk; O=DT; OU=PCLOUDS; CN=localhost
*  SSL certificate verify ok.
* allocate connect buffer!
* Establish HTTP proxy tunnel to management.core.windows.net:443
} [5 bytes data]
> CONNECT management.core.windows.net:443 HTTP/1.1
> Host: management.core.windows.net:443
> User-Agent: curl/7.68.0
> Proxy-Connection: Keep-Alive
> 
{ [5 bytes data]
< HTTP/1.1 200 Connection established
< 
* Proxy replied 200 to CONNECT request
* CONNECT phase completed!
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/ca-certificates.crt
  CApath: /etc/ssl/certs
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* CONNECT phase completed!
* CONNECT phase completed!
{ [5 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [94 bytes data]
* TLSv1.2 (IN), TLS handshake, Certificate (11):
{ [3690 bytes data]
* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
{ [365 bytes data]
* TLSv1.2 (IN), TLS handshake, Server finished (14):
{ [4 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
} [102 bytes data]
* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.2 (OUT), TLS handshake, Finished (20):
} [16 bytes data]
* TLSv1.2 (IN), TLS handshake, Finished (20):
{ [16 bytes data]
* SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384
* ALPN, server accepted to use h2
* Server certificate:
*  subject: C=US; ST=WA; L=Redmond; O=Microsoft Corporation; CN=ussouth3.management.core.windows.net
*  start date: Feb  6 18:56:44 2024 GMT
*  expire date: Jan 31 18:56:44 2025 GMT
*  subjectAltName: host "management.core.windows.net" matched cert's "management.core.windows.net"
*  issuer: C=US; O=Microsoft Corporation; CN=Microsoft Azure RSA TLS Issuing CA 07
*  SSL certificate verify ok.
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
} [5 bytes data]
* Using Stream ID: 1 (easy handle 0x55d447c500e0)
} [5 bytes data]
> GET /:443 HTTP/2
> Host: management.core.windows.net
> user-agent: curl/7.68.0
> accept: */*
> 
{ [5 bytes data]
* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!
} [5 bytes data]
* HTTP/2 stream 0 was not closed cleanly: HTTP_1_1_REQUIRED (err 13)
* Downgrades to HTTP/1.1!
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host localhost left intact
* Issue another request to this URL: 'https://management.core.windows.net/:443'
* Found bundle for host management.core.windows.net: 0x55d447c43de0 [can multiplex]
* Re-using existing connection! (#0) with proxy localhost
* Connected to localhost (127.0.0.1) port 3129 (#0)
* Using Stream ID: 3 (easy handle 0x55d447c500e0)
} [5 bytes data]
> GET /:443 HTTP/2
> Host: management.core.windows.net
> user-agent: curl/7.68.0
> accept: */*
> 
{ [5 bytes data]
* HTTP/2 stream 0 was not closed cleanly: HTTP_1_1_REQUIRED (err 13)
* Connection died, retrying a fresh connect
* Downgrades to HTTP/1.1!
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
} [5 bytes data]
* TLSv1.2 (OUT), TLS alert, close notify (256):
} [2 bytes data]
* TLSv1.3 (OUT), TLS alert, close notify (256):
} [2 bytes data]
* TLSv1.3 (IN), TLS alert, close notify (256):
{ [2 bytes data]
* Issue another request to this URL: 'https://management.core.windows.net/:443'
* Hostname localhost was found in DNS cache
*   Trying 127.0.0.1:3129...
* TCP_NODELAY set
* Connected to localhost (127.0.0.1) port 3129 (#1)
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/squidCA.pem
  CApath: /etc/ssl/certs
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [122 bytes data]
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
{ [6 bytes data]
* TLSv1.3 (IN), TLS handshake, Certificate (11):
{ [944 bytes data]
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
{ [264 bytes data]
* TLSv1.3 (IN), TLS handshake, Finished (20):
{ [52 bytes data]
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.3 (OUT), TLS handshake, Finished (20):
} [52 bytes data]
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server did not agree to a protocol
* Proxy certificate:
*  subject: C=PL; ST=Gdn; L=Gdansk; O=DT; OU=PCLOUDS; CN=localhost
*  start date: Mar 18 08:27:00 2024 GMT
*  expire date: Mar 18 08:27:00 2025 GMT
*  common name: localhost (matched)
*  issuer: C=PL; ST=Gdn; L=Gdansk; O=DT; OU=PCLOUDS; CN=localhost
*  SSL certificate verify ok.
* allocate connect buffer!
* Establish HTTP proxy tunnel to management.core.windows.net:443
} [5 bytes data]
> CONNECT management.core.windows.net:443 HTTP/1.1
> Host: management.core.windows.net:443
> User-Agent: curl/7.68.0
> Proxy-Connection: Keep-Alive
> 
{ [5 bytes data]
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0< HTTP/1.1 200 Connection established
< 
* Proxy replied 200 to CONNECT request
* CONNECT phase completed!
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/ca-certificates.crt
  CApath: /etc/ssl/certs
* SSL re-using session ID
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* CONNECT phase completed!
* CONNECT phase completed!
{ [5 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [100 bytes data]
* TLSv1.2 (IN), TLS handshake, Certificate (11):
{ [3690 bytes data]
* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
{ [365 bytes data]
* TLSv1.2 (IN), TLS handshake, Server finished (14):
{ [4 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
} [102 bytes data]
* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.2 (OUT), TLS handshake, Finished (20):
} [16 bytes data]
* TLSv1.2 (IN), TLS handshake, Finished (20):
{ [16 bytes data]
* old SSL session ID is stale, removing
* SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384
* ALPN, server accepted to use http/1.1
* Server certificate:
*  subject: C=US; ST=WA; L=Redmond; O=Microsoft Corporation; CN=ussouth3.management.core.windows.net
*  start date: Feb  6 18:56:44 2024 GMT
*  expire date: Jan 31 18:56:44 2025 GMT
*  subjectAltName: host "management.core.windows.net" matched cert's "management.core.windows.net"
*  issuer: C=US; O=Microsoft Corporation; CN=Microsoft Azure RSA TLS Issuing CA 07
*  SSL certificate verify ok.
} [5 bytes data]
> GET /:443 HTTP/1.1
> Host: management.core.windows.net
> User-Agent: curl/7.68.0
> Accept: */*
> 
{ [5 bytes data]
* TLSv1.2 (IN), TLS handshake, Hello request (0):
{ [4 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.2 (IN), TLS handshake, Server hello (2):
{ [109 bytes data]
* TLSv1.2 (IN), TLS handshake, Certificate (11):
{ [3690 bytes data]
* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
{ [365 bytes data]
* TLSv1.2 (IN), TLS handshake, Request CERT (13):
{ [30 bytes data]
* TLSv1.2 (IN), TLS handshake, Server finished (14):
{ [4 bytes data]
* TLSv1.2 (OUT), TLS handshake, Certificate (11):
} [7 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
} [102 bytes data]
* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.2 (OUT), TLS handshake, Finished (20):
} [16 bytes data]
* TLSv1.2 (IN), TLS handshake, Finished (20):
{ [16 bytes data]
* old SSL session ID is stale, removing
{ [5 bytes data]
* Mark bundle as not supporting multiuse
< HTTP/1.1 403 Forbidden
< Content-Length: 288
< Content-Type: application/xml; charset=utf-8
< Server: Microsoft-HTTPAPI/2.0
< Strict-Transport-Security: max-age=31536000; includeSubDomains
< Date: Mon, 18 Mar 2024 11:27:10 GMT
< 
{ [288 bytes data]
100   288  100   288    0     0    222      0  0:00:01  0:00:01 --:--:--   494
* Connection #1 to host localhost left intact
<Error xmlns="http://schemas.microsoft.com/windowsazure" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Code>ForbiddenError</Code><Message>The server failed to authenticate the request. Verify that the certificate is valid and is associated with this subscription.</Message></Error>
Connection to https://management.core.windows.net/ is SUCCESSFUL.
-----------------------------------------------------------------------
